name: CI/CD

on:
  push:
    branches:
      - main
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-test:
    name: Build, Test & Coverage on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Build
        run: go build ./...

      - name: Run Tests with Coverage
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out
        shell: bash

      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  format:
    name: Auto-format with gofmt (Linux only)
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Run gofmt and commit changes if needed
        run: |
          gofmt -w .
          if [ -n "$(git status --porcelain)" ]; then
            echo "Code was not formatted. Committing changes..."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "chore: auto-format Go code via gofmt"
            git push
          else
            echo "Code already properly formatted."
          fi
